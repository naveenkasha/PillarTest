#include <iostream>
#include <string>
#include <vector>
#include <map>



using namespace std;

class RomanNumeral
{
public:
  RomanNumeral();
  ~RomanNumeral(){};
  string GetRomanSymbol(int number);
  
  private:
    vector <string> romanVec;
    map <int , string > romanMap;
};

RomanNumeral::RomanNumeral()
{
  romanMap.insert(std::pair<int, string>(1, "I"));
  romanMap.insert(std::pair<int, string>(4, "IV"));
  romanMap.insert(std::pair<int, string>(5, "V"));
  romanMap.insert(std::pair<int, string>(9, "IX"));
  romanMap.insert(std::pair<int, string>(10, "X"));
  romanMap.insert(std::pair<int, string>(40, "XL"));
  romanMap.insert(std::pair<int, string>(50, "L"));
}

string RomanNumeral::GetRomanSymbol(int number)
{
  string roman = "";
    while ( number > 0 ) {
      if ( number > 50 ) {
        roman += romanMap.at(50);
        number -= 50;
      }
      if ( number == 40 ) {
        roman += romanMap.at(40);
        number -= 40;
      }
      if ( number > 10) {
         roman += romanMap.at(10);
         number -= 10;
      }
      if ( number == 9 ) {
        roman += romanMap.at(9);
        number -= 9;
      }
      if (number > 5) {
        roman += romanMap.at(5);
        number -= 5;
      }
      if ( number == 4 ) {
        roman += romanMap.at(9);
        number -= 4;
      }
      if (number > 1 ) {
       roman += romanMap.at(1);
       number -= 1;
      }
}

#include <iostream>
#include <string>
#include <vector>
#include <map>



using namespace std;

class RomanNumeral
{
public:
  RomanNumeral();
  ~RomanNumeral(){};
  string GetRomanSymbol(int number);
  
  private:
    vector <string> romanVec;
    map <int , string > romanMap;
};

RomanNumeral::RomanNumeral()
{
  romanMap.insert(std::pair<int, string>(1, "I"));
  romanMap.insert(std::pair<int, string>(4, "IV"));
  romanMap.insert(std::pair<int, string>(5, "V"));
  romanMap.insert(std::pair<int, string>(9, "IX"));
  romanMap.insert(std::pair<int, string>(10, "X"));
  romanMap.insert(std::pair<int, string>(40, "XL"));
  romanMap.insert(std::pair<int, string>(50, "L"));
  romanMap.insert(std::pair<int, string>(100, "C"));  
  romanMap.insert(std::pair<int, string>(90, "XC"));
  romanMap.insert(std::pair<int, string>(400, "CD"));
  romanMap.insert(std::pair<int, string>(500, "D"));
  romanMap.insert(std::pair<int, string>(900, "CM"));
  romanMap.insert(std::pair<int, string>(1000, "M"));
}

string RomanNumeral::GetRomanSymbol(int number)
{
  string roman = "";
  map <int, string>::reverse_iterator riter;
  
  for (riter = romanMap.rbegin(); riter != romanMap.rend(); ++riter)
  {
    if(number > riter.first) {
      roman += riter.second;
      number -= riter.first
    }
    return roman;
  }
}
